import '../styles/globals.css';
// import "tw-elements-react/dist/css/tw-elements-react.min.css";
import type { Metadata } from 'next';
import { Inter } from 'next/font/google';
import RouteHandler from '@/components/RouteHandler';
import Providers from '@/hooks/Provider';
import { AuthProvider } from '@/components/AuthProvider';
import Head from 'next/head';
import Header from '@/components/common/Header';
import { getSelectorsByUserAgent } from 'react-device-detect';
import { headers } from 'next/headers';
import MobileView from '@/components/mobile/MobileView';
import PopupProvider from '@/components/PopupProvider';

const inter = Inter({ subsets: ['latin'] });

export const metadata: Metadata = {
    metadataBase: new URL('http://masikga.net'),
    title: 'World Cup',
    description: 'Generated by create next app',
    openGraph: {
        title: '나의 이상형이 궁금할 땐?',
        description: '쉽게 게임하고 간편하게 만들어요!',
        url: 'http://masikga.net',
        siteName: '마식가',
        images: [
            {
                url: 'http://masikga.net/images/metahome.png',
                width: 800,
                height: 400,
            },
        ],
        type: 'website',
    },
};

// 이전 버전의 _app 파일의 역할을 대신함
const RootLayout = ({ children }: { children: React.ReactNode }) => {
    const { isMobile } = getSelectorsByUserAgent(headers().get('user-agent') ?? '');

    return (
        <>
            <html lang="en">
                {/* <head>
                    <meta httpEquiv="Content-Security-Policy" content="upgrade-insecure-requests" />
                </head> */}
                <body className={inter.className} suppressHydrationWarning={true}>
                    {isMobile ? (
                        <MobileView />
                    ) : (
                        <Providers>
                            <AuthProvider>
                                <PopupProvider>
                                    {/* TODO: 공통 header적용 */}
                                    <Header />
                                    <RouteHandler />
                                    {children}
                                </PopupProvider>
                            </AuthProvider>
                        </Providers>
                    )}
                </body>
            </html>
        </>
    );
};

export default RootLayout;
